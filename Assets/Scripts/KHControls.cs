//------------------------------------------------------------------------------
// <auto-generated>
//     This code was auto-generated by com.unity.inputsystem:InputActionCodeGenerator
//     version 1.2.0
//     from Assets/Scripts/KHControls.inputactions
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Collections;
using System.Collections.Generic;
using UnityEngine.InputSystem;
using UnityEngine.InputSystem.Utilities;

public partial class @KHControls : IInputActionCollection2, IDisposable
{
    public InputActionAsset asset { get; }
    public @KHControls()
    {
        asset = InputActionAsset.FromJson(@"{
    ""name"": ""KHControls"",
    ""maps"": [
        {
            ""name"": ""Game Select"",
            ""id"": ""1b43612c-6ca8-445f-b354-50e6f7dbc8e1"",
            ""actions"": [
                {
                    ""name"": ""New action"",
                    ""type"": ""Button"",
                    ""id"": ""2cf10095-5589-4e78-a3cd-1dbd1fb908d1"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                }
            ],
            ""bindings"": [
                {
                    ""name"": """",
                    ""id"": ""0195605a-8745-4af0-979f-03f9758a706d"",
                    ""path"": """",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""New action"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                }
            ]
        },
        {
            ""name"": ""Keyblade Index"",
            ""id"": ""cb0d3edb-f4a4-4d95-b1a4-86e84c8c05ff"",
            ""actions"": [
                {
                    ""name"": ""Navigate"",
                    ""type"": ""Value"",
                    ""id"": ""2dcb79be-b3fe-445b-b28a-c27e3a07ebde"",
                    ""expectedControlType"": ""Vector2"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": true
                },
                {
                    ""name"": ""Select"",
                    ""type"": ""Button"",
                    ""id"": ""b02f391a-e943-4892-b29f-afbf35afe4e7"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Back"",
                    ""type"": ""Button"",
                    ""id"": ""9785eb22-a17a-44ac-aa74-354371378e87"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Click"",
                    ""type"": ""Button"",
                    ""id"": ""20aa057b-210c-4ad5-be6e-ab1a2b351202"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Scroll"",
                    ""type"": ""Value"",
                    ""id"": ""9cbac178-fb6f-4bdb-a615-9c0d554931f4"",
                    ""expectedControlType"": ""Axis"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": true
                }
            ],
            ""bindings"": [
                {
                    ""name"": ""WASD"",
                    ""id"": ""a841f45d-5d67-43a6-b66b-224bf5d28987"",
                    ""path"": ""2DVector"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Navigate"",
                    ""isComposite"": true,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": ""up"",
                    ""id"": ""00e517e9-02c7-48bf-886f-f8cc0a738b76"",
                    ""path"": ""<Keyboard>/w"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Desktop"",
                    ""action"": ""Navigate"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""down"",
                    ""id"": ""435d3025-5997-4528-9868-3ed7f22ef863"",
                    ""path"": ""<Keyboard>/s"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Desktop"",
                    ""action"": ""Navigate"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""left"",
                    ""id"": ""95ac5315-c0f4-4ec4-81d7-95c90d33b497"",
                    ""path"": ""<Keyboard>/a"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Desktop"",
                    ""action"": ""Navigate"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""right"",
                    ""id"": ""5286525f-2545-470e-893b-b85396dbd6d1"",
                    ""path"": ""<Keyboard>/d"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Desktop"",
                    ""action"": ""Navigate"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""Arrow Keys"",
                    ""id"": ""ae045544-e66f-4df5-9e47-9e91417918ef"",
                    ""path"": ""2DVector"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Navigate"",
                    ""isComposite"": true,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": ""up"",
                    ""id"": ""d9b79dd9-8ddb-4a62-b5f4-09cc41127c2e"",
                    ""path"": ""<Keyboard>/upArrow"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Desktop"",
                    ""action"": ""Navigate"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""down"",
                    ""id"": ""ee1c29e4-5681-472e-9175-37b2f0fb1d16"",
                    ""path"": ""<Keyboard>/downArrow"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Desktop"",
                    ""action"": ""Navigate"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""left"",
                    ""id"": ""d3c735d9-44e0-4509-b35a-7a35e3772cd8"",
                    ""path"": ""<Keyboard>/leftArrow"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Desktop"",
                    ""action"": ""Navigate"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""right"",
                    ""id"": ""62ad1072-70d2-4322-9062-e37ddc27a1e5"",
                    ""path"": ""<Keyboard>/rightArrow"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Desktop"",
                    ""action"": ""Navigate"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""Gamepad D-Pad"",
                    ""id"": ""ae135764-0c45-43bf-8b1b-4023cfc39778"",
                    ""path"": ""2DVector"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Navigate"",
                    ""isComposite"": true,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": ""up"",
                    ""id"": ""d933d2cd-05e3-44f0-a8f0-ce50264577b5"",
                    ""path"": ""<Gamepad>/dpad/up"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Xbox"",
                    ""action"": ""Navigate"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""down"",
                    ""id"": ""13175751-6d21-44e1-a8e7-c7bd497aa166"",
                    ""path"": ""<Gamepad>/dpad/down"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Xbox"",
                    ""action"": ""Navigate"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""left"",
                    ""id"": ""4ccba692-3ef6-4145-ad56-f142c811696d"",
                    ""path"": ""<Gamepad>/dpad/left"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Xbox"",
                    ""action"": ""Navigate"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""right"",
                    ""id"": ""f5516a7e-5f39-4f66-b09b-5089b9a30680"",
                    ""path"": ""<Gamepad>/dpad/right"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Xbox"",
                    ""action"": ""Navigate"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""Gamepad Left Stick"",
                    ""id"": ""e94cbf85-8446-4e2b-a01b-9630ea87f91c"",
                    ""path"": ""2DVector"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Navigate"",
                    ""isComposite"": true,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": ""up"",
                    ""id"": ""d79d12bf-a4c1-4470-b926-bb2755e213d2"",
                    ""path"": ""<Gamepad>/leftStick/up"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Xbox"",
                    ""action"": ""Navigate"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""down"",
                    ""id"": ""b566fc36-4cf0-4275-a6f2-233d75fcffa8"",
                    ""path"": ""<Gamepad>/leftStick/down"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Xbox"",
                    ""action"": ""Navigate"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""left"",
                    ""id"": ""da075168-3bd2-4e6a-ab9f-2c5ed6f2b52c"",
                    ""path"": ""<Gamepad>/leftStick/left"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Xbox"",
                    ""action"": ""Navigate"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""right"",
                    ""id"": ""88d4de33-d8dc-4a97-9d1d-88e390dbc4ed"",
                    ""path"": ""<Gamepad>/leftStick/right"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Xbox"",
                    ""action"": ""Navigate"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": """",
                    ""id"": ""53c0d709-6278-48b5-87a7-a131ba95098d"",
                    ""path"": ""<Keyboard>/enter"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Desktop"",
                    ""action"": ""Select"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""2e69e48e-2c58-4a08-9f91-966121103d88"",
                    ""path"": ""<Keyboard>/backspace"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Desktop"",
                    ""action"": ""Back"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""15cd6190-f357-42e5-80cf-80965d4ecd24"",
                    ""path"": ""<Keyboard>/escape"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Desktop"",
                    ""action"": ""Back"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""d0417c06-fb45-4034-bccd-b720ecef1012"",
                    ""path"": ""<Mouse>/rightButton"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Desktop"",
                    ""action"": ""Back"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""7c5f51af-1cf0-4709-84b6-e21d192809e3"",
                    ""path"": ""<Mouse>/leftButton"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Desktop"",
                    ""action"": ""Click"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""f7fa4d90-6027-4cfa-ba61-fa7f8d3507ac"",
                    ""path"": ""<Mouse>/scroll/y"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Desktop"",
                    ""action"": ""Scroll"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                }
            ]
        }
    ],
    ""controlSchemes"": [
        {
            ""name"": ""Desktop"",
            ""bindingGroup"": ""Desktop"",
            ""devices"": [
                {
                    ""devicePath"": ""<Keyboard>"",
                    ""isOptional"": false,
                    ""isOR"": false
                },
                {
                    ""devicePath"": ""<Mouse>"",
                    ""isOptional"": true,
                    ""isOR"": false
                }
            ]
        },
        {
            ""name"": ""Xbox"",
            ""bindingGroup"": ""Xbox"",
            ""devices"": [
                {
                    ""devicePath"": ""<XInputController>"",
                    ""isOptional"": false,
                    ""isOR"": false
                }
            ]
        }
    ]
}");
        // Game Select
        m_GameSelect = asset.FindActionMap("Game Select", throwIfNotFound: true);
        m_GameSelect_Newaction = m_GameSelect.FindAction("New action", throwIfNotFound: true);
        // Keyblade Index
        m_KeybladeIndex = asset.FindActionMap("Keyblade Index", throwIfNotFound: true);
        m_KeybladeIndex_Navigate = m_KeybladeIndex.FindAction("Navigate", throwIfNotFound: true);
        m_KeybladeIndex_Select = m_KeybladeIndex.FindAction("Select", throwIfNotFound: true);
        m_KeybladeIndex_Back = m_KeybladeIndex.FindAction("Back", throwIfNotFound: true);
        m_KeybladeIndex_Click = m_KeybladeIndex.FindAction("Click", throwIfNotFound: true);
        m_KeybladeIndex_Scroll = m_KeybladeIndex.FindAction("Scroll", throwIfNotFound: true);
    }

    public void Dispose()
    {
        UnityEngine.Object.Destroy(asset);
    }

    public InputBinding? bindingMask
    {
        get => asset.bindingMask;
        set => asset.bindingMask = value;
    }

    public ReadOnlyArray<InputDevice>? devices
    {
        get => asset.devices;
        set => asset.devices = value;
    }

    public ReadOnlyArray<InputControlScheme> controlSchemes => asset.controlSchemes;

    public bool Contains(InputAction action)
    {
        return asset.Contains(action);
    }

    public IEnumerator<InputAction> GetEnumerator()
    {
        return asset.GetEnumerator();
    }

    IEnumerator IEnumerable.GetEnumerator()
    {
        return GetEnumerator();
    }

    public void Enable()
    {
        asset.Enable();
    }

    public void Disable()
    {
        asset.Disable();
    }
    public IEnumerable<InputBinding> bindings => asset.bindings;

    public InputAction FindAction(string actionNameOrId, bool throwIfNotFound = false)
    {
        return asset.FindAction(actionNameOrId, throwIfNotFound);
    }
    public int FindBinding(InputBinding bindingMask, out InputAction action)
    {
        return asset.FindBinding(bindingMask, out action);
    }

    // Game Select
    private readonly InputActionMap m_GameSelect;
    private IGameSelectActions m_GameSelectActionsCallbackInterface;
    private readonly InputAction m_GameSelect_Newaction;
    public struct GameSelectActions
    {
        private @KHControls m_Wrapper;
        public GameSelectActions(@KHControls wrapper) { m_Wrapper = wrapper; }
        public InputAction @Newaction => m_Wrapper.m_GameSelect_Newaction;
        public InputActionMap Get() { return m_Wrapper.m_GameSelect; }
        public void Enable() { Get().Enable(); }
        public void Disable() { Get().Disable(); }
        public bool enabled => Get().enabled;
        public static implicit operator InputActionMap(GameSelectActions set) { return set.Get(); }
        public void SetCallbacks(IGameSelectActions instance)
        {
            if (m_Wrapper.m_GameSelectActionsCallbackInterface != null)
            {
                @Newaction.started -= m_Wrapper.m_GameSelectActionsCallbackInterface.OnNewaction;
                @Newaction.performed -= m_Wrapper.m_GameSelectActionsCallbackInterface.OnNewaction;
                @Newaction.canceled -= m_Wrapper.m_GameSelectActionsCallbackInterface.OnNewaction;
            }
            m_Wrapper.m_GameSelectActionsCallbackInterface = instance;
            if (instance != null)
            {
                @Newaction.started += instance.OnNewaction;
                @Newaction.performed += instance.OnNewaction;
                @Newaction.canceled += instance.OnNewaction;
            }
        }
    }
    public GameSelectActions @GameSelect => new GameSelectActions(this);

    // Keyblade Index
    private readonly InputActionMap m_KeybladeIndex;
    private IKeybladeIndexActions m_KeybladeIndexActionsCallbackInterface;
    private readonly InputAction m_KeybladeIndex_Navigate;
    private readonly InputAction m_KeybladeIndex_Select;
    private readonly InputAction m_KeybladeIndex_Back;
    private readonly InputAction m_KeybladeIndex_Click;
    private readonly InputAction m_KeybladeIndex_Scroll;
    public struct KeybladeIndexActions
    {
        private @KHControls m_Wrapper;
        public KeybladeIndexActions(@KHControls wrapper) { m_Wrapper = wrapper; }
        public InputAction @Navigate => m_Wrapper.m_KeybladeIndex_Navigate;
        public InputAction @Select => m_Wrapper.m_KeybladeIndex_Select;
        public InputAction @Back => m_Wrapper.m_KeybladeIndex_Back;
        public InputAction @Click => m_Wrapper.m_KeybladeIndex_Click;
        public InputAction @Scroll => m_Wrapper.m_KeybladeIndex_Scroll;
        public InputActionMap Get() { return m_Wrapper.m_KeybladeIndex; }
        public void Enable() { Get().Enable(); }
        public void Disable() { Get().Disable(); }
        public bool enabled => Get().enabled;
        public static implicit operator InputActionMap(KeybladeIndexActions set) { return set.Get(); }
        public void SetCallbacks(IKeybladeIndexActions instance)
        {
            if (m_Wrapper.m_KeybladeIndexActionsCallbackInterface != null)
            {
                @Navigate.started -= m_Wrapper.m_KeybladeIndexActionsCallbackInterface.OnNavigate;
                @Navigate.performed -= m_Wrapper.m_KeybladeIndexActionsCallbackInterface.OnNavigate;
                @Navigate.canceled -= m_Wrapper.m_KeybladeIndexActionsCallbackInterface.OnNavigate;
                @Select.started -= m_Wrapper.m_KeybladeIndexActionsCallbackInterface.OnSelect;
                @Select.performed -= m_Wrapper.m_KeybladeIndexActionsCallbackInterface.OnSelect;
                @Select.canceled -= m_Wrapper.m_KeybladeIndexActionsCallbackInterface.OnSelect;
                @Back.started -= m_Wrapper.m_KeybladeIndexActionsCallbackInterface.OnBack;
                @Back.performed -= m_Wrapper.m_KeybladeIndexActionsCallbackInterface.OnBack;
                @Back.canceled -= m_Wrapper.m_KeybladeIndexActionsCallbackInterface.OnBack;
                @Click.started -= m_Wrapper.m_KeybladeIndexActionsCallbackInterface.OnClick;
                @Click.performed -= m_Wrapper.m_KeybladeIndexActionsCallbackInterface.OnClick;
                @Click.canceled -= m_Wrapper.m_KeybladeIndexActionsCallbackInterface.OnClick;
                @Scroll.started -= m_Wrapper.m_KeybladeIndexActionsCallbackInterface.OnScroll;
                @Scroll.performed -= m_Wrapper.m_KeybladeIndexActionsCallbackInterface.OnScroll;
                @Scroll.canceled -= m_Wrapper.m_KeybladeIndexActionsCallbackInterface.OnScroll;
            }
            m_Wrapper.m_KeybladeIndexActionsCallbackInterface = instance;
            if (instance != null)
            {
                @Navigate.started += instance.OnNavigate;
                @Navigate.performed += instance.OnNavigate;
                @Navigate.canceled += instance.OnNavigate;
                @Select.started += instance.OnSelect;
                @Select.performed += instance.OnSelect;
                @Select.canceled += instance.OnSelect;
                @Back.started += instance.OnBack;
                @Back.performed += instance.OnBack;
                @Back.canceled += instance.OnBack;
                @Click.started += instance.OnClick;
                @Click.performed += instance.OnClick;
                @Click.canceled += instance.OnClick;
                @Scroll.started += instance.OnScroll;
                @Scroll.performed += instance.OnScroll;
                @Scroll.canceled += instance.OnScroll;
            }
        }
    }
    public KeybladeIndexActions @KeybladeIndex => new KeybladeIndexActions(this);
    private int m_DesktopSchemeIndex = -1;
    public InputControlScheme DesktopScheme
    {
        get
        {
            if (m_DesktopSchemeIndex == -1) m_DesktopSchemeIndex = asset.FindControlSchemeIndex("Desktop");
            return asset.controlSchemes[m_DesktopSchemeIndex];
        }
    }
    private int m_XboxSchemeIndex = -1;
    public InputControlScheme XboxScheme
    {
        get
        {
            if (m_XboxSchemeIndex == -1) m_XboxSchemeIndex = asset.FindControlSchemeIndex("Xbox");
            return asset.controlSchemes[m_XboxSchemeIndex];
        }
    }
    public interface IGameSelectActions
    {
        void OnNewaction(InputAction.CallbackContext context);
    }
    public interface IKeybladeIndexActions
    {
        void OnNavigate(InputAction.CallbackContext context);
        void OnSelect(InputAction.CallbackContext context);
        void OnBack(InputAction.CallbackContext context);
        void OnClick(InputAction.CallbackContext context);
        void OnScroll(InputAction.CallbackContext context);
    }
}
